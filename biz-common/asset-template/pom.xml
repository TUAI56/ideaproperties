<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>biz-common</artifactId>
    <groupId>com.bonc.boot</groupId>
    <version>1.6.2</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>asset-template</artifactId>
  <packaging>jar</packaging>
  <description>新增微服务的模板,里面包含web, mybatis-plus, redis</description>


  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <dependencies>
    <!-- spring boot 配置所需依赖 -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- Web 相关 -->
    <dependency>
      <groupId>com.bonc.boot</groupId>
      <artifactId>bonc-spring-boot-starter-web</artifactId>
    </dependency>

    <!-- 通用的一些工具类等部分 -->
    <dependency>
      <groupId>com.bonc.boot</groupId>
      <artifactId>bonc-common</artifactId>
    </dependency>

    <!-- DB 相关 -->
    <dependency>
      <groupId>com.bonc.boot</groupId>
      <artifactId>bonc-spring-boot-starter-mybatis</artifactId>
    </dependency>
    <dependency>
      <groupId>com.bonc.boot</groupId>
      <artifactId>bonc-spring-boot-starter-redis</artifactId>
    </dependency>
    <dependency>
      <groupId>com.github.ulisesbocchio</groupId>
      <artifactId>jasypt-spring-boot</artifactId>
      <version>3.0.4</version>
      <scope>compile</scope>
    </dependency>

  </dependencies>

  <build>
    <!-- 设置构建的 jar 包名 -->
    <finalName>${project.artifactId}</finalName>
    <resources>
      <resource>
        <!-- xml放在java目录下-->
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.xml</include>
        </includes>
      </resource>
      <!--指定资源的位置（xml放在resources下，可以不用指定）-->
      <resource>
        <directory>src/main/resources</directory>
      </resource>
    </resources>

    <plugins>
      <!-- Spring Boot模块jar构建 -->
      <!-- 打包 -->
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
         <version>2.6.7</version>  <!-- 如果 spring.boot.version 版本修改，则这里也要跟着修改 -->
        <configuration>
          <!-- maven打包时会将外部引入的jar包打到项目中 -->
          <includeSystemScope>true</includeSystemScope>
          <includes>
            <!-- 不存在的include引用，相当于排除所有maven依赖jar，没有任何三方jar文件打入输出jar -->
            <include>
              <groupId>null</groupId>
              <artifactId>null</artifactId>
            </include>
          </includes>
          <layout>ZIP</layout>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal> <!-- 将引入的 jar 打入其中 -->
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- 拷贝第三方依赖文件到指定目录 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <!-- 拷贝项目依赖包到指定目录下 -->
              <outputDirectory>target/libs</outputDirectory>
              <!-- 是否排除间接依赖，间接依赖也要拷贝 -->
              <excludeTransitive>false</excludeTransitive>
              <stripVersion>false</stripVersion>
              <includeScope>runtime</includeScope>
              <!-- 打包需要排出的的jar -->
              <!-- <excludeArtifactIds>
              bonc-base-common,bonc-jiangxi-pcmodel,bonc-di-service,bonc-report-tmp
              </excludeArtifactIds>
              -->
              <silent>true</silent>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>
</project>
